server {
  listen 80;
  server_name shubkrishan.tech www.shubkrishan.tech;

  # Route 1: Handle API calls first.
  # This matches any request that starts with /webtasktsg/api/
  location /webtasktsg/api/ {
    # This rewrite rule removes "/webtasktsg" from the URL before passing it on.
    # e.g., /webtasktsg/api/name becomes /api/name
    rewrite ^/webtasktsg(/.*)$ $1 break;
    proxy_pass http://backend:5000;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
  }

  # Route 2: Handle all other frontend requests for the app.
  # This matches any other request starting with /webtasktsg/
  location /webtasktsg/ {
    # The trailing slash on proxy_pass is critical.
    # It tells Nginx to send the request to the root of the frontend service.
    # e.g., /webtasktsg/wiki becomes /wiki
    proxy_pass http://frontend:80/;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
  }

  # Route 3 (Optional but Recommended): Redirect the root domain to your app.
  # If someone visits just your domain, they get sent to the right place.
  location = / {
    return 302 /webtasktsg/;
  }
}